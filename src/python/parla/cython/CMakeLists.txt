
set(CYTHON_FLAGS "${CYTHON_FLAGS} -I${CMAKE_CURRENT_SOURCE_DIR}")
set(CMAKE_SHARED_MODULE_PREFIX "")

#add_compile_options("-fsanitize=address")

add_cython_target(core core.pyx CXX PY3)
add_cython_target(tasks tasks.pyx CXX PY3)
add_cython_target(scheduler scheduler.pyx CXX PY3)
add_cython_target(device device.pyx CXX PY3)
add_cython_target(device_manager device_manager.pyx CXX PY3)
add_cython_target(cyparray_state cyparray_state.pyx CXX PY3)
add_cython_target(cyparray cyparray.pyx CXX PY3)

add_library(core MODULE ${core})
add_library(tasks MODULE ${tasks})
add_library(scheduler MODULE ${scheduler})
add_library(device MODULE ${device})
add_library(device_manager MODULE ${device_manager})
add_library(cyparray_state MODULE ${cyparray_state})
add_library(cyparray MODULE ${cyparray})



message(STATUS "PYTHON_RELATIVE_SITE_PACKAGES_DIR: ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}")
message(STATUS "CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")

install(TARGETS core LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)
install(TARGETS tasks LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)
install(TARGETS scheduler LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)
install(TARGETS device LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)
install(TARGETS device_manager LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)
install(TARGETS cyparray_state LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)
install(TARGETS cyparray LIBRARY DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)

install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/__init__.py DESTINATION ${PYTHON_RELATIVE_SITE_PACKAGES_DIR}/parla/cython/)

target_link_libraries(core ${PYTHON_LIBRARIES})
target_link_libraries(core backend)
target_include_directories(core PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(core PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(core PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(core PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(core PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(tasks ${PYTHON_LIBRARIES})
target_link_libraries(tasks backend)
target_include_directories(tasks PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(tasks PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(tasks PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(tasks PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(tasks PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(scheduler ${PYTHON_LIBRARIES})
target_link_libraries(scheduler backend)
target_include_directories(scheduler PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(scheduler PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(scheduler PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(scheduler PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(scheduler PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(device ${PYTHON_LIBRARIES})
target_link_libraries(device backend)
target_include_directories(device PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(device PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(device PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(device PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(device PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(device_manager ${PYTHON_LIBRARIES})
target_link_libraries(device_manager backend)
target_include_directories(device_manager PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(device_manager PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(device_manager PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(device_manager PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(device_manager PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(cyparray_state ${PYTHON_LIBRARIES})
target_link_libraries(cyparray_state backend)
target_include_directories(cyparray_state PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(cyparray_state PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(cyparray_state PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(cyparray_state PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(cyparray_state PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(cyparray ${PYTHON_LIBRARIES})
target_link_libraries(cyparray backend)
target_include_directories(cyparray PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend)
target_include_directories(cyparray PUBLIC ${PROJECT_SOURCE_DIR}/src/c/backend/include)
target_include_directories(cyparray PUBLIC ${NumPy_INCLUDE_DIRS})
target_include_directories(cyparray PUBLIC ${PYTHON_INCLUDE_DIRS})
target_include_directories(cyparray PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

python_extension_module(core)
python_extension_module(tasks)
python_extension_module(scheduler)
python_extension_module(device)
python_extension_module(device_manager)
python_extension_module(cyparray_state)
python_extension_module(cyparray)
